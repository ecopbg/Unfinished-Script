local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- GUI Persistence After Death
local function onCharacterAdded(newCharacter)
    character = newCharacter
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
end
player.CharacterAdded:Connect(onCharacterAdded)

-- Variables
local launchPower = 100
local launchDirections = { "Forward", "Backward", "Left", "Right" }
local currentDirectionIndex = 1 -- Start with Forward
local guiPosition = UDim2.new(0.4, 0, 0.3, 0)
local rainbowColors = { Color3.fromRGB(255,0,0), Color3.fromRGB(255,165,0), Color3.fromRGB(255,255,0),
                        Color3.fromRGB(0,255,0), Color3.fromRGB(0,0,255), Color3.fromRGB(75,0,130),
                        Color3.fromRGB(148,0,211) }

-- GUI Creation
local screenGui = Instance.new("ScreenGui")
screenGui.ResetOnSpawn = false -- Persist after death
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 180)
frame.Position = guiPosition
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.fromRGB(255, 0, 0)
frame.Draggable = true
frame.Active = true
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
title.Text = "fUNny lAunch gUI!1!!1"
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.Cartoon
title.TextStrokeTransparency = 0 -- Text Outline
title.Parent = frame

-- Function to Cycle Rainbow Colors
task.spawn(function()
    while true do
        for _, color in ipairs(rainbowColors) do
            title.TextColor3 = color
            task.wait(5)
        end
    end
end)

-- Small Credit Text
local creditText = Instance.new("TextLabel")
creditText.Size = UDim2.new(1, 0, 0, 15)
creditText.Position = UDim2.new(0, 0, 0, 30)
creditText.BackgroundTransparency = 1
creditText.Text = "made by @ecopbg on yt! <3"
creditText.TextScaled = true
creditText.TextColor3 = Color3.fromRGB(255, 255, 255)
creditText.Font = Enum.Font.Cartoon
creditText.Parent = frame

-- Close Button (Top Left)
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(0, -35, 0, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
closeButton.Text = "X"
closeButton.TextScaled = true
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.Cartoon
closeButton.Parent = frame

-- Reopen Button
local reopenButton = Instance.new("TextButton")
reopenButton.Size = UDim2.new(0, 100, 0, 30)
reopenButton.Position = UDim2.new(0, 10, 0, 10)
reopenButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
reopenButton.Text = "Reopen"
reopenButton.TextScaled = true
reopenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
reopenButton.Font = Enum.Font.Cartoon
reopenButton.Parent = screenGui
reopenButton.Visible = false

-- Button Creation Function
local function createButton(text, posY)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 25)
    button.Position = UDim2.new(0.05, 0, 0, posY)
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.BorderSizePixel = 2
    button.BorderColor3 = Color3.fromRGB(255, 0, 0)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Font = Enum.Font.Cartoon
    button.TextScaled = true
    button.Parent = frame
    return button
end

-- Create Buttons
local launchButton = createButton("Launch", 50)
local unstunButton = createButton("Unstun", 80)
local directionButton = createButton("Direction: Forward", 110)

-- Power Button
local powerButton = Instance.new("TextButton")
powerButton.Size = UDim2.new(0.9, 0, 0, 25)
powerButton.Position = UDim2.new(0.05, 0, 0, 140)
powerButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
powerButton.BorderSizePixel = 2
powerButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
powerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
powerButton.Text = "Power: " .. launchPower
powerButton.Font = Enum.Font.Cartoon
powerButton.TextScaled = true
powerButton.Parent = frame

-- Power Input Box
local powerInputBox = Instance.new("TextBox")
powerInputBox.Size = UDim2.new(0.9, 0, 0, 25)
powerInputBox.Position = UDim2.new(0.05, 0, 0, 140)
powerInputBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
powerInputBox.BorderSizePixel = 2
powerInputBox.BorderColor3 = Color3.fromRGB(255, 0, 0)
powerInputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
powerInputBox.Text = ""
powerInputBox.Font = Enum.Font.Cartoon
powerInputBox.TextScaled = true
powerInputBox.Visible = false
powerInputBox.Parent = frame

-- Launch Function with Backflip
local function launchPlayer()
    humanoid:ChangeState(Enum.HumanoidStateType.Physics) -- Paralyze player
    
    local directionVector = Vector3.new(0, 60, 0) -- Default (upwards)
    local verticalPower = 10 + (launchPower / 12.5) -- Converts 1-500 into 10-40 range

    if launchDirections[currentDirectionIndex] == "Forward" then
        directionVector = Vector3.new(0, verticalPower, -launchPower)
    elseif launchDirections[currentDirectionIndex] == "Backward" then
        directionVector = Vector3.new(0, verticalPower, launchPower)
    elseif launchDirections[currentDirectionIndex] == "Left" then
        directionVector = Vector3.new(-launchPower, verticalPower, 0)
    elseif launchDirections[currentDirectionIndex] == "Right" then
        directionVector = Vector3.new(launchPower, verticalPower, 0)
    end

    local launchVelocity = Instance.new("BodyVelocity")
    launchVelocity.Velocity = directionVector
    launchVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
    launchVelocity.Parent = humanoidRootPart

    -- Backflip Animation
    local bodyGyro = Instance.new("BodyGyro")
    bodyGyro.CFrame = CFrame.Angles(math.rad(-360), 0, 0)
    bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
    bodyGyro.Parent = humanoidRootPart

    game:GetService("Debris"):AddItem(launchVelocity, 1)
    game:GetService("Debris"):AddItem(bodyGyro, 1)

    -- Simulate Backflip with CFrame
    local backflipTween = TweenService:Create(humanoidRootPart, TweenInfo.new(0.5), {CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0)})
    backflipTween:Play()
    backflipTween.Completed:Connect(function()
        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0) -- Reset rotation after backflip
    end)
end

-- Unstun Function
local function unstunPlayer()
    humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
end

-- Change Direction Function
local function changeDirection()
    currentDirectionIndex = (currentDirectionIndex % #launchDirections) + 1
    directionButton.Text = "Direction: " .. launchDirections[currentDirectionIndex]
end

-- Power Button Click Function
powerButton.MouseButton1Click:Connect(function()
    powerInputBox.Visible = true
    powerInputBox.Focus()
    powerButton.Visible = false
end)

-- Power Input Box Confirmation
powerInputBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local powerInput = tonumber(powerInputBox.Text)
        if powerInput then
            launchPower = math.clamp(powerInput, 1, 500)
            powerButton.Text = "Power: " .. launchPower
        else
            powerButton.Text = "Invalid Power"
        end
        powerInputBox.Visible = false
        powerButton.Visible = true
    end
end)

-- Close & Reopen Functions
local function closeGUI()
    guiPosition = frame.Position
    frame.Visible = false
    reopenButton.Visible = true
end
local function reopenGUI()
    frame.Position = guiPosition
    frame.Visible = true
    reopenButton.Visible = false
end

-- Connect Buttons
launchButton.MouseButton1Click:Connect(launchPlayer)
unstunButton.MouseButton1Click:Connect(unstunPlayer)
directionButton.MouseButton1Click:Connect(changeDirection)
closeButton.MouseButton1Click:Connect(closeGUI)
reopenButton.MouseButton1Click:Connect(reopenGUI)
